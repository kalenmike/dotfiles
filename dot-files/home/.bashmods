#
# Author:   Kalen Michael
# Website:  https://kalenmichael.com
# Version:  2.0.0
# Last Update: 27 April 2022
#
# HOW TO USE THIS FILE?
#   Import this into the ~/.bashrc using
#   source ~/{THIS_FILE_NAME}

# ------------------------------------------------
#   Standard bash setup
# ------------------------------------------------
# Disable venv prompt - for showing custom prompt
export VIRTUAL_ENV_DISABLE_PROMPT=1

#Ignore duplicate history entries
export HISTCONTROL=ignoreboth:erasedups

# Fix dolphin icons in i3
export XDG_CURRENT_DESKTOP=GNOME

# Modify grep color to green
export GREP_COLORS='ms=01;32'

# Make vim default editor in ranger
export EDITOR=vim

# kubectl
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

if [[ $(tty) != "/dev/tty"* ]]; then
    function create_prompt() {

        local _RESET_="\[\033[00m\]"
        local _GREY_="\[\033[00;30m\]"
        local _GREEN_="\[\033[01;32m\]"
        # blue="\[\033[01;34m\]"
        local _PURPLE_="\[\033[0;35m\]"
        # # white="\[\033[0;37m\]"
        local _YELLOW_="\[\033[1;33m\]"
        # onGreen="\[\033[01;42m\]"
        # onBlue="\[\033[01;44m\]"
        # onPurple="\[\033[01;45m\]"

        local _OPEN_="$_GREY_($_RESET_"
        local _CLOSE_="$_GREY_)$_RESET_"

        # Prompts
        # user="\u"
        # host="\h"
        # dir="\W"
        # priv="\$"
        # job="\j"

        # Prompt : ace@falcon:dir $
        #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\u\[\033[01;30m\]@\[\033[01;32m\]\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '

        # Prompt (requires nerd font) : ace>falcon>dir> [git] [jobs] $
        # PS1="\n${debian_chroot:+($debian_chroot)}\[\033[01;44m\]\u \[\033[01;42m\]\[\033[01;34m\] \[\033[00m\]\[\033[01;42m\]\h \[\033[01;45m\]\[\033[01;32m\] \[\033[00m\]\[\033[01;45m\]\W \[\033[00m\]\[\033[0;35m\] \[\033[00m\]\[\033[01;32m\]\$(parse_git_branch)\$(dir_summary)\[\033[0;33m\]\$(running_jobs)\[\033[00m\]\$ "

        # Prompt (requires nerd font) : dir files folders > $
        # PS1="\n${debian_chroot:+($debian_chroot)}\[\033[00m\]\[\033[01;42m\] \W \[\033[00m\]\[\033[0;32m\]\[\033[00m\]\[\033[0;42m\] \$(dir_summary)\[\033[00m\]\[\033[01;32m\] \[\033[00m\]\[\033[01;35m\]\$(parse_git_branch)\[\033[0;33m\]\$(running_jobs)\[\033[00m\]\$ "

        # Prompt (requires nerd font) : ┌──(dir) (files folders) (git) (jobs)
        #                               └─>
        PS1="\n$_GREY_┌──$_RESET_${debian_chroot:+($debian_chroot)}$_RESET_$_GREY_[$_YELLOW_\W$_GREY_]─$_OPEN_$_YELLOW_\$(dir_summary)$_CLOSE_\$(parse_git_branch)\$(running_jobs)$_GREY_\n$_GREY_└─\$(is_venv)$_YELLOW_> $_RESET_"

    }

    create_prompt
    unset -f create_prompt
fi

# ------------------------------------------------
#   ALIASES
# ------------------------------------------------

# Standard navigation
alias ll="ls -lF | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"%0o \",k);print}'"
alias c="clear && echo -e \"\\033c\""
alias ls="ls -p --color=auto"

# OpenVPN
alias thm-start="sudo openvpn ~/.openvpn/tryhackme.ovpn "

# SSH
alias ssh:bluehost='ssh thatcrb7@50.87.249.20'

# Open this file to edit in nano
alias bashmods="vim /home/ace/Projects/scripts/bash-mods"

# Allow scripts to run python2 [system has python3]
alias python="python3"

# Duplicate Terminal with Working Directory
alias dupterm='nohup kitty >&/dev/null &'

# Get 10 biggest files/folders
alias ducks="du -cks * | sort -rn | head"

alias ra="ranger"

alias pysrc="if [ -d "venv" ]; then source venv/bin/activate; else echo 'Error: venv folder not found in the current directory.'; fi"

alias sc="/home/ace/Projects/ultralytics/websites/hub/sc.sh"

alias tree='find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"'

alias chat="/home/ace/Projects/playground/chatgpt-cli/chat"

function restart-jobs(){
	PREFIX=$1
	kubectl get jobs --field-selector=status.successful=0 -o custom-columns=":metadata.name" | grep "^${PREFIX}" | awk '{print $1}' | xargs -I {} sh -c "kubectl get job {} -o json | jq 'del(.spec.selector)' |   jq 'del(.spec.template.metadata.labels)' | kubectl replace --force -f - >/dev/null; echo Restarted: {}"
}

function scp:bluehost() {
    scp $1 thatcrb7@50.87.249.20:$2
}

function ultra() {
    # Quickly navigate to ultralytics folders
    local ULTRALYTICS_ROOT="/home/ace/Projects/ultralytics"
    
    # Define associative array for repo folder mappings
    declare -A repo_folders=(
    	[home]="/"
        [web]="/repos/hub-web"
        [server]="/repos/hub-server"
        [site]="/repos/public-site"
        [sdk]="/repos/hub-sdk"
        [qa]="/qa"
        [yolov8]="/repos/ultralytics"
    )
    
    # Check if a valid repository argument is provided
    if [ $# -eq 0 ] || [ -z "${repo_folders[$1]}" ]; then
        echo -n "Usage: ultra ["
        for option in "${!repo_folders[@]}"; do
            echo -n "$option|"
        done
        echo -n "help]"
        echo
        return 1
    fi
    
    local folder="${repo_folders[$1]}"
    cd "$ULTRALYTICS_ROOT$folder" || return 1
}

function kube-connect() {
    # Connect to pod by id
    kubectl exec -it $1 -c app -- /bin/bash
}

# Add all files and commit with passed comment
function gca() {
    git add *
    git commit -m "$@"
}

#Add Git Branch to Prompt
#Courtesy of https://gist.github.com/joseluisq/1e96c54fa4e1e5647940
function parse_git_branch() {

    local _RESET_="\e[00m"
    local _PURPLE_="\033[1;35m"
    local _OPEN_="\e[00;30m($_RESET_"
    local _CLOSE_="\e[00;30m)$_RESET_"
    #modified
    local BRANCH=$(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/')
    if [ "$BRANCH" != "" ]; then
        echo -e "\e[00;30m─$_OPEN_$_PURPLE_$BRANCH$_CLOSE_"
    fi
}

#Currently running jobs
function running_jobs() {

    local _RESET_="\e[00m"
    local _YELLOW_="\e[1;33m"
    local _OPEN_="\e[00;30m($_RESET_"
    local _CLOSE_="\e[00;30m)$_RESET_"

    local ACTIVE_JOBS=$(jobs -rp | wc -l)
    if [ $ACTIVE_JOBS != "0" ]; then
        echo -e "\e[00;30m─$_OPEN_$_YELLOW_ $ACTIVE_JOBS$_CLOSE_"
    fi
}

#Currently running jobs
function dir_summary() {
    local FILES=$(ls | grep -v / | wc -l)
    local FOLDERS=$(ls | grep / | wc -l)
    local HIDDEN=$(ls -A | grep "^\." | wc -l)
    local HIDDEN_PROMPT=""
    if [ "$HIDDEN" != "0" ];then
    	HIDDEN_PROMPT=" 󰘓 $HIDDEN"
    fi
    echo -e " $FOLDERS  $FILES$HIDDEN_PROMPT"
}

function is_venv(){
	local _YELLOW_="\e[1;33m"
	local _RESET_="\e[00m"
	if [ "$VIRTUAL_ENV" != "" ];then
		echo -e "$_YELLOW_$_RESET_"
	fi
}

# Add autocomplete for kubectl
source <(kubectl completion bash)
